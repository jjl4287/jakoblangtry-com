# Cloud Build configuration for building the static website
steps:
  # Step 1: Install pnpm and dependencies
  - name: 'node:18'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install -g pnpm
        pnpm install
    id: 'setup-dependencies'

  # Step 2: Set NODE_ENV to production for build and copy files
  - name: 'node:18'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install -g pnpm
        export NODE_ENV=production
        # Ensure public directory exists
        mkdir -p public
        # Copy necessary files to public
        cp index.html public/
        cp script.js public/
        cp styles.css public/
        # Copy 404 page if it exists
        if [ -f "404.html" ]; then cp 404.html public/; fi
        # Log status
        ls -la public/
    id: 'build-project'
    waitFor: ['setup-dependencies']

  # Step 3: Access OpenWeatherMap API Key from Environment Variable
  - name: 'bash'  # Use a standard bash image
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Ensure the environment variable is set
        if [ -z "$OPENWEATHERMAP_API_KEY" ]; then
          echo "Error: OPENWEATHERMAP_API_KEY environment variable is not set."
          exit 1
        fi
        echo "// Client-side environment variables
        const ENV = {
            OPENWEATHERMAP_API_KEY: '${OPENWEATHERMAP_API_KEY}'
        };

        // Expose the environment to the window
        window.ENV = ENV;" > public/env.js
        # Verify env.js was created (without printing sensitive data)
        echo "env.js created:"
        ls -la public/env.js
        head -n 5 public/env.js # Show first few lines to confirm structure
    id: 'inject-api-key'
    waitFor: ['build-project']